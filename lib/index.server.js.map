{
  "version": 3,
  "sources": ["../src/index.server.ts", "../src/api.ts"],
  "sourcesContent": ["import { apiClientFactory } from '@vue-storefront/core';\nimport axios from 'axios';\nimport api from './api';\n\nfunction onCreate(settings: any) {\n  const client = axios.create();\n\n  return {\n    config: settings,\n    client\n  };\n}\n\nconst { createApiClient } = apiClientFactory({\n  onCreate,\n  api\n});\n\nexport {\n  createApiClient\n};\n", "const algoliasearch = require(\"algoliasearch\");\nconst client = algoliasearch(\"MN8I8UO0AC\", \"48e14f065359d34167f565f01c453bf1\");\nconst products = client.initIndex(\"magento2_devdefault_products\");\nconst categories = client.initIndex(\"magento2_devdefault_categories\");\n\nconst searchProducts = async (context: object, params: string): Promise<any> => {\n  try {\n    const response = await products.search(params, { hitsPerPage: 20 });\n    return response;\n  } catch (error) {\n    return [];\n  }\n};\n\nconst searchCategories = async (context: object, params: string): Promise<any> => {\n  try {\n    const response = await categories.search(params, { hitsPerPage: 5 });\n    return response;\n  } catch (error) {\n    return [];\n  }\n};\n\nconst searchMultiple = async (context: object, params: string): Promise<any> => {\n  try {\n    const queries = [\n      {\n        indexName: \"magento2_devdefault_categories\",\n        query: params,\n        params: {\n          hitsPerPage: 5,\n        },\n      },\n      {\n        indexName: \"magento2_devdefault_products\",\n        query: params,\n        params: {\n          hitsPerPage: 10,\n        },\n      },\n    ];\n    const response = await client.multipleQueries(queries);\n    return response;\n  } catch (error) {\n    return [];\n  }\n};\n\nconst getProductsByCategory = async (context: object, params: any): Promise<any> => {\n  try {\n    const response = await products.search('', {filters: `categoryIds: ${params.categoryId}`, hitsPerPage: params.hitsPerPage});\n    return response;\n  } catch (error) {\n    return [];\n  }\n};\n\nconst getRelatedProducts = async (context: object, params: any): Promise<any> => {\n  try {\n    const response = await client.getRelatedProducts({\n      indexName: 'magento2_devdefault_products',\n      objectID: params.objectID\n    })\n    return response;\n  } catch (error) {\n    return [];\n  }\n};\n\nexport default {\n  searchProducts,\n  searchCategories,\n  searchMultiple,\n  getProductsByCategory,\n  getRelatedProducts\n};\n"],
  "mappings": "6iBAAA,gEAAiC,gCACjC,EAAkB,oBCDlB,GAAM,GAAgB,QAAQ,iBACxB,EAAS,EAAc,aAAc,kCAAkC,EACvE,EAAW,EAAO,UAAU,8BAA8B,EAC1D,EAAa,EAAO,UAAU,gCAAgC,EAE9D,EAAiB,MAAO,EAAiB,IAAiC,CAC9E,GAAI,CAEF,MADiB,MAAM,GAAS,OAAO,EAAQ,CAAE,YAAa,EAAG,CAAC,CAEpE,MAAE,CACA,MAAO,CAAC,CACV,CACF,EAEM,EAAmB,MAAO,EAAiB,IAAiC,CAChF,GAAI,CAEF,MADiB,MAAM,GAAW,OAAO,EAAQ,CAAE,YAAa,CAAE,CAAC,CAErE,MAAE,CACA,MAAO,CAAC,CACV,CACF,EAEM,EAAiB,MAAO,EAAiB,IAAiC,CAC9E,GAAI,CACF,GAAM,GAAU,CACd,CACE,UAAW,iCACX,MAAO,EACP,OAAQ,CACN,YAAa,CACf,CACF,EACA,CACE,UAAW,+BACX,MAAO,EACP,OAAQ,CACN,YAAa,EACf,CACF,CACF,EAEA,MADiB,MAAM,GAAO,gBAAgB,CAAO,CAEvD,MAAE,CACA,MAAO,CAAC,CACV,CACF,EAEM,EAAwB,MAAO,EAAiB,IAA8B,CAClF,GAAI,CAEF,MADiB,MAAM,GAAS,OAAO,GAAI,CAAC,QAAS,gBAAgB,EAAO,aAAc,YAAa,EAAO,WAAW,CAAC,CAE5H,MAAE,CACA,MAAO,CAAC,CACV,CACF,EAEM,EAAqB,MAAO,EAAiB,IAA8B,CAC/E,GAAI,CAKF,MAJiB,MAAM,GAAO,mBAAmB,CAC/C,UAAW,+BACX,SAAU,EAAO,QACnB,CAAC,CAEH,MAAE,CACA,MAAO,CAAC,CACV,CACF,EAEO,EAAQ,CACb,iBACA,mBACA,iBACA,wBACA,oBACF,EDvEA,WAAkB,EAAe,CAC/B,GAAM,GAAS,UAAM,OAAO,EAE5B,MAAO,CACL,OAAQ,EACR,QACF,CACF,CAEA,GAAM,CAAE,mBAAoB,uBAAiB,CAC3C,WACA,KACF,CAAC",
  "names": []
}
